# Tools for Working With Simulation

Business simulation is a type of computer-based modeling that allows us to experiment and analyze different business scenarios and strategies. Its appeal comes from being a cost-effective way to explore and test business decisions in production, marketing, finance, and operations, among many other.

We will be using R to conduct business simulation. But before we jump into building our simulation models, we'll need to learn the tools that allow us to perform the analysis. In this module, we introduce the building blocks of our computer simulation models.

## Storing Our Data in R

Objects, vectors and data frames are all important in the R programming language. They are useful when storing and manipulating data in R. An **object** is a piece of data that can be stored in a variable. It can be as simple as a single integer or as informative as the output in regression analysis. The code below creates an object *x* that stores the number $5$.

```{r}
x<-5
```

**Vectors** are one-dimensional arrays of data that can be stored in an object. They can contain elements of various data types, such as numerical values, character, or logical values (i.e., TRUE or FALSE). However, every component of the vector must be the same data type. Below, the vector *Books* stores the titles of $5$ monster classics a bookstore plans to release as characters.

```{r}
books<-c("Frankenstein","Dracula","Moby Dick",
         "War Of The Worlds","Beowulf")
```

Lastly, a **data frame**, is a two-dimensional data table with rows and columns. Each column in a data frame represents a different variable, and each row represents a single observation or record. You can think of a data frame as a collection of vectors that are related to each other. We can easily construct a data frame by combining one or more vectors using the `data.frame()` function in R.

```{r}
data.frame(Books=c("Frankenstein","Dracula",
                     "Moby Dick",
                     "War Of The Worlds","Beowulf"), 
           Price=c(9.5,5.78,6.34,5.67,2.45))
```

## Generating Random Numbers in R

There are several functions available in R that can be used to **generate random numbers**. These functions are based on a specific probability distribution. For instance, the `rbinom()` function generates random numbers based on the binomial distribution, while the `rnorm()` function generates random numbers based on the normal distribution. By using these functions, we can generate random numbers that follow a specific probability distribution. For example, the **binomial distribution** may be useful in estimating the probability that a certain number of customers respond to a marketing campaign. However, as we will see below, we can also use the distribution to generate random customers who either responded or not responded to the campaign.

Assume the bookstore is unsure on how many customers will buy their Monster Classic Series at list price. Their plan is to send $100$ catalogs by mail to potential customers. Before they send the catalogs, they decide to get a rough idea on demand. Past data reveals that the probability a customer would buy any of the titles at the given prices is $0.70$. Let's modify our data frame by simulating demand with the `rbinom()` function.

```{r}
(MS<-data.frame(Books=c("Frankenstein","Dracula",
                     "Moby Dick",
                     "War Of The Worlds","Beowulf"), 
           Price=c(9.5,5.78,6.34,5.67,2.45),
           Demand=rbinom(5,100,0.7)))
```

As you can see, the `rbinom()` function has yielded $5$ simulated outcomes from the binomial experiment with a probability of $0.7$. The bookstore can now use this data to perform analysis on the profitability of the Monster Series if it desires.

## Using Loops and Conditional in R

Loops and conditionals are extremely useful when creating our simulation models. Among the many benefits, they will allow us to easily generate new variables for our model, or test different variations of our parameters to see how the model behaves.

Loops and conditionals are two important control structures in the R programming language that allow you to execute specific blocks of code based on certain conditions.

A **loop** is a programming construct that allows you to repeat a block of code a specified number of times or until a certain condition is met. There are several types of loops in R, including for loops, which execute a block of code for a fixed number of iterations, and while loops, which execute a block of code as long as a certain condition is true. Below you can see the structure of the while loop.

![](images/Loop.png){fig-align="center"}

**Conditionals** allow you to execute different blocks of code based on whether a certain condition is true or false. The most common type of conditional in R is the if-else statement, which executes one block of code if a condition is true and a different block of code if the condition is false. Below is the structure of the conditional statement.

![](images/Conditional.png){fig-align="center"}

Let's go back to the Monster Classic example and assume that the bookstore has gained additional insight on the demand of their collection. In particular, assume that if the book is either Frankenstein or Dracula, the probability of a customer buying it is $0.9$ (the probability of the other books remains at $0.7$). We can now modify our demand simulation using a loop and a conditional.

```{r}
demand<-c()

for (i in MS$Books){
  if (i=="Frankenstein"| i=="Dracula"){
    p=0.9
  }
  else {p=0.7}
  demand<-c(demand,rbinom(1,100,p))
}

print(demand)
```

In the code above, the inner conditional checks whether the titles are either Frankenstein or Dracula. If so, then the random binomial number is drawn with the probability $0.9$, if not the it is drawn with probability $0.7$. The for loop, goes through all the books in the series one by one and adds a simulated demand. You can quickly realize that this becomes very efficient if the bookstore has a very large collection of books. Below is our data frame with the new simulated values.

```{r}
(MS<-data.frame(Books=c("Frankenstein","Dracula",
                     "Moby Dick",
                     "War Of The Worlds","Beowulf"), 
           Price=c(9.5,5.78,6.34,5.67,2.45),
           Demand=demand))
```

## The VA Deaprtment of Transportation Wants Your Services

The VA ferry crossing the James River was first established in $1925$. The ferry transports vehicles back and forth from Jamestown to Scotland in a $15$-minute ride. The VA Department of Transportation wants you to simulate the daily demand for the ferry so that they schedule the expected staff and number of ferries to run.

## Lessons Learned In This Chapter

-   Generating Random Numbers with R functions.

-   Using Loops and Conditionals.

-   Understanding objects, vectors, and data frames.

## Readings

These reading will help you review the concepts and theory necessary for completing this module. @HOP reviews the R basics needed to perform computer simulation, while @GelvesBS reviews the probability concepts necessary to understand the different random number generators.

@HOP Chapter 1 (The Very Basics), Chapter 3 (R Objects), Chapter 7.2, 7.3 (Conditional Statements), Chapter 9.3, 9.4, 9.5 (Loops).

@GelvesBS Chapter 10 (Discrete Random Variables), Chapter 11 (Continuous Random Variables).

ADD SOME ARTICLE ON SIMULATION
